# 为什么要关心Java8
Java8使得代码编程更容易和更清晰。

Java8里面将代码传递给方法的功能（同时也能够返回代码并将其包含在数据结构中）还让我们能够使用一整套新技巧，
通常称为**函数式编程**。

## Java怎么还在变
我们都希望出现一种完美的通用语言，但在现实中，某些语言只是更适合某些方面。

C和C++仍然是构建操作系统和各种嵌入式系统的流行工具，因为它们编出的程序尽管安全性不佳，但运行时占用资源少。

Java和C#等安全性语言在诸多运行资源不太紧张的应用中已经取代了C和C++.

## 流处理

**流**是一系列数据项，一次只生成一项。

举例：

Unix的cat命令会把两个文件连接起来创建一个流，tr会转换流中的字符，sort会对流中的行进行排序，而tail -3会给出流的最后3行。
Unix允许这些程序通过管道（｜）连接在一起。

cat file1 file2 | tr "[A-Z]" "[a-z]" | sort | tail -3

在Unix中，命令（cat,tr,sort,tail）是同时执行的，这样sort就可以在cat或tr完成前先处理头几行。

基于这一思想，Java8在java.util.stream中添加了一个Stream API，Stream API的很多方法可以链接起来形成一个复杂的流水线，
像链接起来的Unix命令一样，可以把这样的流变成那样的流，而不是一次只处理一个项目。Java 8可以透明地把输入的不相关部分拿到几个
CPU内核上去分别执行你的Stream操作流水线---这几乎是免费的并行，用不着去费劲搞Thread了。

